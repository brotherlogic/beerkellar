// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: beerkellar.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cellar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeerIds []int64 `protobuf:"varint,1,rep,packed,name=beer_ids,json=beerIds,proto3" json:"beer_ids,omitempty"`
}

func (x *Cellar) Reset() {
	*x = Cellar{}
	mi := &file_beerkellar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cellar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cellar) ProtoMessage() {}

func (x *Cellar) ProtoReflect() protoreflect.Message {
	mi := &file_beerkellar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cellar.ProtoReflect.Descriptor instead.
func (*Cellar) Descriptor() ([]byte, []int) {
	return file_beerkellar_proto_rawDescGZIP(), []int{0}
}

func (x *Cellar) GetBeerIds() []int64 {
	if x != nil {
		return x.BeerIds
	}
	return nil
}

type BeerCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beers []*Beer `protobuf:"bytes,1,rep,name=beers,proto3" json:"beers,omitempty"`
}

func (x *BeerCache) Reset() {
	*x = BeerCache{}
	mi := &file_beerkellar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeerCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeerCache) ProtoMessage() {}

func (x *BeerCache) ProtoReflect() protoreflect.Message {
	mi := &file_beerkellar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeerCache.ProtoReflect.Descriptor instead.
func (*BeerCache) Descriptor() ([]byte, []int) {
	return file_beerkellar_proto_rawDescGZIP(), []int{1}
}

func (x *BeerCache) GetBeers() []*Beer {
	if x != nil {
		return x.Beers
	}
	return nil
}

type Beer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Abv         float32 `protobuf:"fixed32,3,opt,name=abv,proto3" json:"abv,omitempty"`
	Brewery     string  `protobuf:"bytes,4,opt,name=brewery,proto3" json:"brewery,omitempty"`
	GlobalScore float32 `protobuf:"fixed32,5,opt,name=global_score,json=globalScore,proto3" json:"global_score,omitempty"`
}

func (x *Beer) Reset() {
	*x = Beer{}
	mi := &file_beerkellar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Beer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beer) ProtoMessage() {}

func (x *Beer) ProtoReflect() protoreflect.Message {
	mi := &file_beerkellar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beer.ProtoReflect.Descriptor instead.
func (*Beer) Descriptor() ([]byte, []int) {
	return file_beerkellar_proto_rawDescGZIP(), []int{2}
}

func (x *Beer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Beer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Beer) GetAbv() float32 {
	if x != nil {
		return x.Abv
	}
	return 0
}

func (x *Beer) GetBrewery() string {
	if x != nil {
		return x.Brewery
	}
	return ""
}

func (x *Beer) GetGlobalScore() float32 {
	if x != nil {
		return x.GlobalScore
	}
	return 0
}

var File_beerkellar_proto protoreflect.FileDescriptor

var file_beerkellar_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x65, 0x65, 0x72, 0x6b, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x62, 0x65, 0x65, 0x72, 0x6b, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x22, 0x23,
	0x0a, 0x06, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x62, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x42, 0x65, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x26, 0x0a, 0x05, 0x62, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x6b, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x42, 0x65, 0x65,
	0x72, 0x52, 0x05, 0x62, 0x65, 0x65, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x04, 0x42, 0x65, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x61, 0x62, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x62,
	0x65, 0x65, 0x72, 0x6b, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beerkellar_proto_rawDescOnce sync.Once
	file_beerkellar_proto_rawDescData = file_beerkellar_proto_rawDesc
)

func file_beerkellar_proto_rawDescGZIP() []byte {
	file_beerkellar_proto_rawDescOnce.Do(func() {
		file_beerkellar_proto_rawDescData = protoimpl.X.CompressGZIP(file_beerkellar_proto_rawDescData)
	})
	return file_beerkellar_proto_rawDescData
}

var file_beerkellar_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_beerkellar_proto_goTypes = []any{
	(*Cellar)(nil),    // 0: beerkellar.Cellar
	(*BeerCache)(nil), // 1: beerkellar.BeerCache
	(*Beer)(nil),      // 2: beerkellar.Beer
}
var file_beerkellar_proto_depIdxs = []int32{
	2, // 0: beerkellar.BeerCache.beers:type_name -> beerkellar.Beer
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_beerkellar_proto_init() }
func file_beerkellar_proto_init() {
	if File_beerkellar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beerkellar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beerkellar_proto_goTypes,
		DependencyIndexes: file_beerkellar_proto_depIdxs,
		MessageInfos:      file_beerkellar_proto_msgTypes,
	}.Build()
	File_beerkellar_proto = out.File
	file_beerkellar_proto_rawDesc = nil
	file_beerkellar_proto_goTypes = nil
	file_beerkellar_proto_depIdxs = nil
}
